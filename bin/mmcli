#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'mmcli.rb'

class App
  include Methadone::Main
  include Methadone::CLILogging
  include Methadone::SH

  main do |manifest_file_path|
    # your program code here
    # You can access CLI options via
    # the options Hash
    if options[:a]
      File.open(manifest_file_path, "a+") do |f|
        lines_sans_newlines = f.readlines.map(&:chomp)
        options[:a].uniq.each do |path|
          f.puts path unless lines_sans_newlines.include?(path)
        end
      end
    end
    if options[:l]
      File.open(manifest_file_path, "r") do |f|
        f.each_line { |line| puts line }
      end
    end
  end

  # supplemental methods here

  # Declare command-line interface here

  description "Manifest manager command line interface"
  #
  # Accept flags via:
options[:a] = options["a"] = options[:add] = options["add"] = []
  on("-a <glob>", "--add <glob>", "Add file paths to the manifest for any file which matches the glob pattern") do |s|
    options[:a] << s
    while (ARGV.length > 1 && ARGV[0][0] != "-")
      options[:a] << ARGV.shift
    end
  end

  #on("-a <glob>", "--add <glob>", "add file paths from the manifest for any file which matches the glob pattern")
  on("-d <glob>", "--delete <glob>", "Delete file paths from the manifest for any file which matches the glob pattern")
  on("-c", "--clean", "Clean up the manifest file by deleting paths for any non-existent files")
  on("-l", "--list", "List the contents of the manifest file")
  # options[flag] will contain VAL
  #
  # Specify switches via:
  # on("--[no-]switch","Some switch")
  #
  # Or, just call OptionParser methods on opts
  #
  # Require an argument
  arg :"manifest-file-path", "path to the manifest file"
  #
  # # Make an argument optional
  # arg :optional_arg, :optional

  version Mmcli::VERSION

  use_log_level_option :toggle_debug_on_signal => 'USR1'

  go!
end
