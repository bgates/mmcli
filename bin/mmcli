#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'
require 'methadone'
require 'mmcli.rb'

# App parses options and the argument, then delegates work to Mmcli::Manifest
class App
  include Methadone::Main
  include Methadone::CLILogging
  include Methadone::SH
  include Mmcli

  main do |manifest_file_path|
    if options[:delete].any?
      Manifest.delete!(manifest_file_path, options[:delete]) do |line, list|
        list.any?{|pattern| line.chomp =~ Regexp.new("#{pattern.sub('*', '.*')}$")}
      end
    end

    Manifest.clean!(manifest_file_path) if options[:clean]

    Manifest.add!(manifest_file_path, options[:add]) if options[:add].any?

    Manifest.list_contents(manifest_file_path) if options[:list]
  end

  def self.space_separated_options?
    ARGV.length > 1 && ARGV[0][0] != '-'
  end

  # Declare command-line interface here

  description 'Manifest manager command line interface'

  options[:add] = []
  on('-a <glob>', '--add <glob>', 'Add file paths to the manifest for any file which matches the glob pattern') do |s|
    options[:add] << "#{PREFIX}#{s}"
    options[:add] << "#{PREFIX}#{ARGV.shift}" while space_separated_options?
  end

  options[:delete] = []
  on('-d <glob>', '--delete <glob>', 'Delete file paths from the manifest for any file which matches the glob pattern') do |s|
    options[:delete] << s
    options[:delete] << ARGV.shift while space_separated_options?
  end

  on('-c', '--clean', 'Clean up the manifest file by deleting paths for any non-existent files')
  on('-l', '--list', 'List the contents of the manifest file')
  # options[flag] will contain VAL
  #
  # Require an argument
  arg :'manifest-file-path', 'path to the manifest file'

  version Mmcli::VERSION

  use_log_level_option toggle_debug_on_signal: 'USR1'

  go!
end
